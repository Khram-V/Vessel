/**                                        OpenGL™ Silicon Graphics Inc.
                                           (c) Mark J. Kilgard, 1994.
*/
#include <GL/gl.h>
//                   Обод, корпус, крышка и днище отражены в координатах x и y.
//                                                   Ручка и носик только по y.
static void Teapot( int grid, float scale, GLenum type )
{ const static char patch[10][16] = {                                 // 10x16
  {102,103,104,105,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 }, // rim
  { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }, // body
  { 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 },
  { 96, 96, 96, 96, 97, 98, 99,100,101,101,101,101,  0,  1,  2,  3 }, // lid
  {  0,  1,  2,  3,106,107,108,109,110,111,112,113,114,115,116,117 },
  {118,118,118,118,124,122,119,121,123,126,125,120, 40, 39, 38, 37 }, // bottom
  { 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }, // handle
  { 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 28, 65, 66, 67 },
  { 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }, // spout
  { 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95 } };
 const static float cp[][3] = {                                       // 127x3
  {.4,0,5.4},{.4,-.224,5.4},{.224,-.4,5.4},{0,-.4,5.4},{2.676,0,5.062},
  {2.676,-1.498,5.062},{1.498,-2.676,5.062},{0,-2.676,5.062},{2.876,0,5.062},
  {2.876,-1.61,5.062},{1.61,-2.876,5.062},{0,-2.876,5.062},{3,0,4.8},
  {3,-1.68,4.8},{1.68,-3,4.8},{0,-3,4.8},{3.5,0,3.75},{3.5,-1.96,3.75},
  {1.96,-3.5,3.75},{0,-3.5,3.75},{4,0,2.7},{4,-2.24,2.7},{2.24,-4,2.7},
  {0,-4,2.7},{4,0,1.8},{4,-2.24,1.8},{2.24,-4,1.8},{0,-4,1.8},{-4,0,1.8},
  {4,0,.9},{4,-2.24,.9},{2.24,-4,.9},{0,-4,.9},{3,0,.45},{3,-1.68,.45},
  {1.68,-3,.45},{0,-3,.45},{3,0,.3},{3,-1.68,.3},{1.68,-3,.3},{0,-3,.3},
  {-3.2,0,4.05},{-3.2,-.6,4.05},{-3,-.6,4.5},{-3,0,4.5},{-4.6,0,4.05},
  {-4.6,-.6,4.05},{-5,-.6,4.5},{-5,0,4.5},{-5.4,0,4.05},{-5.4,-.6,4.05},
  {-6,-.6,4.5},{-6,0,4.5},{-5.4,0,3.6},{-5.4,-.6,3.6},{-6,-.6,3.6},{-6,0,3.6},
  {-5.4,0,3.15},{-5.4,-.6,3.15},{-6,-.6,2.7},{-6,0,2.7},{-5,0,2.25},
  {-5,-.6,2.25},{-5.3,-.6,1.875},{-5.3,0,1.875},{-4,-.6,1.8},{-3.8,-.6,1.2},
  {-3.8,0,1.2},{3.4,0,2.85},{3.4,-1.32,2.85},{3.4,-1.32,1.2},{3.4,0,1.2},
  {5.2,0,2.85},{5.2,-1.32,2.85},{6.2,-1.32,1.65},{6.2,0,1.65},{4.6,0,4.2},
  {4.6,-.5,4.2},{4.8,-.5,4.05},{4.8,0,4.05},{5.4,0,4.8},{5.4,-.5,4.8},
  {6.6,-.5,4.8},{6.6,0,4.8},{5.6,0,4.95},{5.6,-.5,4.95},{7.05,-.5,4.988},
  {7.05,0,4.988},{5.8,0,4.95},{5.8,-.3,4.95},{6.9,-.3,5.026},{6.9,0,5.026},
  {5.6,0,4.8},{5.6,-.3,4.8},{6.4,-.3,4.8},{6.4,0,4.8},{0,0,6.3},{1.6,0,6.3},
  {1.6,-.9,6.3},{.9,-1.6,6.3},{0,-1.6,6.3},{0,0,5.7},{2.8,0,4.8},
  {2.8,-1.568,4.8},{1.568,-2.8,4.8},{0,-2.8,4.8},{.8,0,5.1},{.8,-.448,5.1},
  {.448,-.8,5.1},{0,-.8,5.1},{2.6,0,5.1},{2.6,-1.456,5.1},{1.456,-2.6,5.1},
  {0,-2.6,5.1},{2.6,0,4.8},{2.6,-1.456,4.8},{1.456,-2.6,4.8},{0,-2.6,4.8},
  {0,0,0},{2.85,-1.596,0},{3,0,.15},{2.85,0,0},{1.596,-2.85,0},{0,-3,.15},
  {0,-2.85,0},{3,-1.68,.15},{1.68,-3,.15} };
 const static float tex[2][2][2]={ {{0,0},{1,0}},{{0,1},{1,1}} };
 float p[4][4][3],q[4][4][3],r[4][4][3],s[4][4][3];
  glPushAttrib( GL_ENABLE_BIT|GL_EVAL_BIT );
  glEnable( GL_AUTO_NORMAL );
  glEnable( GL_NORMALIZE );
  glEnable( GL_MAP2_VERTEX_3 );
  glEnable( GL_MAP2_TEXTURE_COORD_2 );
  glPushMatrix();
  glRotatef( 270,1,0,0 );
  glScalef( scale/=4,scale,scale );
  glTranslatef( 0,0,-1.5 );
  for(  int i=0; i<10; i++ )
  { for( int j=0; j<4; j++ )
    for( int k=0; k<4; k++ )
    for( int l=0; l<3; l++ )
    { p[j][k][l]=cp[patch[i][j*4+k]][l],
      q[j][k][l]=cp[patch[i][j*4+(3-k)]][l];   if( l==1 )q[j][k][l]*=-1;
      if( i<6 )
      { r[j][k][l]=cp[patch[i][j*4+(3-k)]][l]; if( l==0 )r[j][k][l]*=-1;
        s[j][k][l]=cp[patch[i][j*4+k]][l];     if( l<=1 )s[j][k][l]*=-1;
    } }
    glMap2f( GL_MAP2_TEXTURE_COORD_2,0,1,2,2,0,1,4,2,&tex[0][0][0] );
    glMap2f( GL_MAP2_VERTEX_3,0,1,3,4,0,1,12,4,&p[0][0][0] );
    glMapGrid2f( grid,1,0, grid,0,1 );
    glEvalMesh2( type,0,grid,0,grid );
    glMap2f( GL_MAP2_VERTEX_3,0,1,3,4,0,1,12,4,&q[0][0][0] );
    glEvalMesh2( type,0,grid,0,grid );
    if( i<6 )
      glMap2f( GL_MAP2_VERTEX_3,0,1,3,4,0,1,12,4,&r[0][0][0] ),
      glEvalMesh2( type,0,grid,0,grid ),
      glMap2f( GL_MAP2_VERTEX_3,0,1,3,4,0,1,12,4,&s[0][0][0] ),
      glEvalMesh2( type,0,grid,0,grid );
  } glPopMatrix();
    glPopAttrib();
}
void glutWireTeapot( float size ){ Teapot( 10,size,GL_LINE ); }
void glutSolidTeapot( float size ){ Teapot( 7,size,GL_FILL ); }
